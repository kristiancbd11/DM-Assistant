package views;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.concurrent.Task;
import javafx.scene.Scene;
import javafx.stage.Stage;

public class MainApp extends Application {

    @Override
    public void start(Stage primaryStage) {
        // Mostrar LoadingView primero
        LoadingView loadingView = new LoadingView();
        Scene loadingScene = new Scene(loadingView.getRoot(), 400, 300);
        primaryStage.setScene(loadingScene);
        primaryStage.setTitle("Cargando...");
        primaryStage.show();

        // Cargar la aplicaci√≥n principal en segundo plano
        Task<MainView> loadAppTask = new Task<>() {
            @Override
            protected MainView call() {
                // Inicializar vistas
                ToolBarView toolBarView = new ToolBarView();
                ExplorerView explorerView = new ExplorerView();
                DesktopView desktopView = new DesktopView();
                InfoView infoView = new InfoView();
                TaskBarView taskBarView = new TaskBarView();

                // Inicializar controladores
                new ToolBarController(toolBarView);
                new ExplorerController(explorerView, infoView);
                new DesktopController(desktopView);
                new InfoController(infoView);
                new TaskBarController(taskBarView);

                // Construir y devolver MainView
                return new MainView(
                    toolBarView, explorerView, desktopView, infoView, taskBarView
                );
            }
        };

        // Al completar, cambiar la escena
        loadAppTask.setOnSucceeded(event -> {
            MainView mainView = loadAppTask.getValue();
            Scene mainScene = new Scene(mainView.getRoot(), 1200, 800);
            primaryStage.setScene(mainScene);
            primaryStage.setMaximized(true);
            primaryStage.setTitle("DM Assistant");
        });

        // Manejo de errores
        loadAppTask.setOnFailed(event -> {
            Throwable error = loadAppTask.getException();
            error.printStackTrace();
            Platform.exit();
        });

        // Ejecutar la tarea
        Thread backgroundThread = new Thread(loadAppTask);
        backgroundThread.setDaemon(true);
        backgroundThread.start();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
