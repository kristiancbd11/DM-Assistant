package designerView;

import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.Label;
import javafx.scene.image.ImageView;
import javafx.scene.layout.VBox;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CategoriaPaleta {

    private final String titulo;
    private final List<?> elementos;
    private final Map<Integer, Boolean> estadoColocados = new HashMap<>();
    private final Map<String, Object> objetosPorNombre = new HashMap<>();
    private final VBox contenedor = new VBox(5);

    public CategoriaPaleta(String titulo, List<?> elementos) {
        this.titulo = titulo;
        this.elementos = elementos;
        inicializar();
    }

    private void inicializar() {
    contenedor.setPadding(new Insets(5));
    contenedor.setAlignment(Pos.TOP_CENTER);

    int fila = 0;
    int columna = 0;

    for (Object obj : elementos) {
        String nombre = obj.toString();
        int id = obtenerIdDesdeObjeto(obj);
        objetosPorNombre.put(nombre, obj);
        estadoColocados.put(id, false);

        ElementoVisual ev = new ElementoVisual(obj, fila, columna);

        // Crear etiqueta del nombre
        Label nombreLabel = new Label(ev.getNombre());
        nombreLabel.setStyle("-fx-font-weight: bold;");

        // Cargar imagen
        String imagePath = "/tablero/tokens/" + ev.token;
        ImageView imageView = new ImageView(new javafx.scene.image.Image(imagePath, 64, 64, true, true));

        // Contenedor visual del elemento
        VBox itemBox = new VBox(2, nombreLabel, imageView);
        itemBox.setAlignment(Pos.CENTER);
        itemBox.setStyle("-fx-border-color: gray; -fx-padding: 5px;");
        itemBox.setUserData(Map.of("nombre", ev.getNombre(), "categoria", titulo));

        // Soporte para arrastrar
        itemBox.setOnDragDetected(event -> {
            var db = itemBox.startDragAndDrop(javafx.scene.input.TransferMode.MOVE);
            var content = new javafx.scene.input.ClipboardContent();
            content.putString(ev.getNombre());
            db.setContent(content);
            db.setDragView(itemBox.snapshot(null, null));
            event.consume();
        });

        contenedor.getChildren().add(itemBox);

        // Incrementar fila/columna (puedes adaptar esta l√≥gica si necesitas un layout en grilla)
        fila++;
    }
}


    private int obtenerIdDesdeObjeto(Object obj) {
        try {
            var method = obj.getClass().getMethod("getId");
            return (int) method.invoke(obj);
        } catch (Exception e) {
            System.err.println("Error al obtener ID de objeto: " + e.getMessage());
            return -1;
        }
    }

    public VBox getContenedor() {
        return contenedor;
    }

    public String getTitulo() {
        return titulo;
    }

    public Map<Integer, Boolean> getEstadoColocados() {
        return estadoColocados;
    }

    public Map<String, Object> getObjetosPorNombre() {
        return objetosPorNombre;
    }
}
