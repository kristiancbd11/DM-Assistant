package clases_partida;

import java.util.ArrayList;
import java.util.List;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;

@Entity
@Table (name = "CRIATURAS")
public class Criatura {
	
	@Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "criatura_gen")
    @SequenceGenerator(name = "criatura_gen", sequenceName = "criatura_seq", allocationSize = 1)
	@Column (name = "idCriatura")
	private int idCriatura;
	
	@Column (name = "nombre")
	private String nombre;
	
	@ManyToMany(mappedBy = "criaturas", cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.EAGER)
	private List<Escena> escenas;
	
	@ManyToMany(mappedBy = "criaturas", cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.EAGER)
	private List<Ubicacion> ubicaciones;
	
	@ManyToMany(mappedBy = "criaturas", cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.EAGER)
	private List<Mundo> mundos = new ArrayList<Mundo>();
	
	public Criatura(String nombre) {
		this.nombre = nombre;
	}
	
	public Criatura () {
		
	}

	public int getIdCriatura() {
		return idCriatura;
	}

	public void setIdCriatura(int idCriatura) {
		this.idCriatura = idCriatura;
	}

	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	public List<Escena> getEscenas() {
		return escenas;
	}

	public void setEscenas(List<Escena> escenas) {
		this.escenas = escenas;
	}

	public List<Ubicacion> getUbicaciones() {
		return ubicaciones;
	}

	public void setUbicaciones(List<Ubicacion> ubicaciones) {
		this.ubicaciones = ubicaciones;
	}

	public List<Mundo> getMundos() {
		return mundos;
	}

	public void setMundos(List<Mundo> mundos) {
		this.mundos = mundos;
	}
	
	public void addMundo(Mundo mundo) {
		mundos.add(mundo);
	}
	
	public void removeMundo(Mundo mundo) {
		mundos.remove(mundo);
	}

	@Override
	public String toString() {
		return nombre;
	}
}
